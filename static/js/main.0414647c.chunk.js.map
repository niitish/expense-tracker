{"version":3,"sources":["components/Card.js","components/ExpenseDate.js","components/ExpenseItem.js","components/ExpensesList.js","components/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/ExpensesChart.js","components/Expenses.js","components/ExpenseForm.js","components/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","year","date","getFullYear","month","toLocaleString","day","ExpenseItem","useState","title","amount","ExpensesList","items","length","map","expense","id","ExpenseFilter","value","selected","onChange","event","console","log","target","onChangeFilter","ChartBar","barHeight","maxValue","Math","round","style","height","label","Chart","vals","dataPoints","dataPoint","globMax","max","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","setYear","filteredExpenses","filter","toString","selectedYear","ExpensesChart","ExpenseForm","enteredTitle","setEnteredTitle","enteredDate","setEnteredDate","enteredAmt","setEnteredAmt","onSubmit","preventDefault","expenseData","random","Date","onSave","type","required","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredData","onExpenseAdd","App","demoExpenses","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0414647c.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const year = props.date.getFullYear();\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import Card from \"./Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  // const clickHandler = () => {\r\n  //   setTitle(\"Updated\");\r\n  //   console.log(\"updated\");\r\n  // };\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{title}</h2>\r\n        <div className=\"expense-item__price\">â‚¹ {props.amount}</div>\r\n      </div>\r\n      {/* <button onClick={clickHandler}>Edit</button> */}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses this year.</h2>;\r\n  }\r\n  return (\r\n    <div className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ExpensesFilter.css\";\r\n\r\nconst ExpenseFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    console.log(event.target.value);\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2023\">2023</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barHeight = Math.round((100 * props.value) / props.maxValue) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{ height: barHeight }}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const vals = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const globMax = Math.max(...vals);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={globMax}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"./Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpenseChart;\r\n","import \"./Expenses.css\";\r\nimport ExpenseList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport Card from \"./Card\";\r\nimport { useState } from \"react\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [year, setYear] = useState(\"2021\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === year;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter selected={year} onChangeFilter={filterChangeHandler} />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpenseList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const [enteredAmt, setEnteredAmt] = useState(\"\");\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      id: Math.random().toString(),\r\n      title: enteredTitle,\r\n      amount: +enteredAmt,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSave(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredAmt(\"\");\r\n  };\r\n\r\n  const titleHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const dateHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const amtHandler = (event) => {\r\n    setEnteredAmt(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleHandler}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"5\"\r\n            step=\"5\"\r\n            value={enteredAmt}\r\n            onChange={amtHandler}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2021-11-01\"\r\n            value={enteredDate}\r\n            onChange={dateHandler}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const expenseDataHandler = (enteredData) => {\r\n    const expenseData = {\r\n      ...enteredData,\r\n    };\r\n\r\n    props.onExpenseAdd(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add new expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSave={expenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses\";\nimport NewExpense from \"./components/NewExpense\";\n\nfunction App() {\n  const demoExpenses = [\n    {\n      id: \"e1\",\n      title: \"Notebook\",\n      amount: 50,\n      date: new Date(2021, 10, 14),\n    },\n  ];\n\n  const [expenses, setExpenses] = useState(demoExpenses);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onExpenseAdd={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}